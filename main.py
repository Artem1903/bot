from fastapi import FastAPI, Request
import openai
import os
import httpx
import json
import time
from threading import Timer
import faiss
import numpy as np
from sentence_transformers import SentenceTransformer
import asyncio

app = FastAPI()

openai.api_key = os.getenv("OPENAI_API_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_API_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"

# –ó–∞–≥—Ä—É–∂–∞–µ–º fallback –∏ timeout —Ñ—Ä–∞–∑—ã
with open("fallback_phrases.json", encoding="utf-8") as f:
    fallback_phrases = json.load(f)

with open("timeout_consultation_phrases.json", encoding="utf-8") as f:
    timeout_phrases = json.load(f)

# –õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
model = SentenceTransformer("nli-MiniLM2-L6-H768-v2")

# –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
knowledge_base = [
    "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ª–∏–ø–æ—Å–∞–∫—Ü–∏—è —Å–ø–∏–Ω—ã?",
    "–ö–∞–∫–∞—è —Ü–µ–Ω–∞ –Ω–∞ –º–∞–º–º–æ–ø–ª–∞—Å—Ç–∏–∫—É?",
    "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ª–∏–ø–æ—Å–∞–∫—Ü–∏—è –±–æ–∫–æ–≤ –∂–∏–≤–æ—Ç–∞?"
]

def embed(text):
    return model.encode(text).tolist()

kb_embeddings = np.array([embed(text) for text in knowledge_base]).astype("float32")
index = faiss.IndexFlatL2(len(kb_embeddings[0]))
index.add(kb_embeddings)

# –¢–∞–π–º–µ—Ä—ã –∏ –ø–∞–º—è—Ç—å
user_timers = {}
user_offered = set()
chat_histories = {}

system_prompt = """
–í—ã ‚Äî –ø–ª–∞—Å—Ç–∏—á–µ—Å–∫–∏–π —Ö–∏—Ä—É—Ä–≥, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç –æ–Ω–ª–∞–π–Ω. –í–∞—à —Å—Ç–∏–ª—å ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –≤–µ–∂–ª–∏–≤—ã–π, –Ω–æ –∂–∏–≤–æ–π. –í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ, –ø–æ –¥–µ–ª—É, –±–µ–∑ —à–∞–±–ª–æ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑. –û–±—Ä–∞—â–∞–µ—Ç–µ—Å—å –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –Ω–∞ ¬´–í—ã¬ª.

‚úÖ –ï—Å–ª–∏ —Ü–µ–Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞ ‚Äî –Ω–∞–∑—ã–≤–∞–π—Ç–µ –µ—ë **—Ç–æ—á–Ω–æ**. –ù–∞–ø—Ä–∏–º–µ—Ä:
‚Äî ¬´–ß–µ–∫-–ª–∏—Ñ—Ç —Å—Ç–æ–∏—Ç 600 000 —Ç–≥¬ª
‚Äî ¬´–£–≤–µ–ª–∏—á–∏–≤–∞—é—â–∞—è –º–∞–º–º–æ–ø–ª–∞—Å—Ç–∏–∫–∞ –±–µ–∑ —É—á–µ—Ç–∞ –∏–º–ø–ª–∞–Ω—Ç–∞ ‚Äî 800 000 —Ç–≥¬ª

‚õî –ù–µ —É—Ö–æ–¥–∏—Ç–µ –æ—Ç –æ—Ç–≤–µ—Ç–∞ —Ñ—Ä–∞–∑–∞–º–∏ –≤—Ä–æ–¥–µ ¬´—Ü–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç‚Ä¶¬ª, –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ —É–∫–∞–∑–∞–Ω–∞ –≤ –ø—Ä–∞–π—Å–µ. –£—Ç–æ—á–Ω–µ–Ω–∏–µ ¬´–Ω—É–∂–µ–Ω –æ—Å–º–æ—Ç—Ä¬ª –¥–æ–ø—É—Å—Ç–∏–º–æ, –Ω–æ —Ç–æ–ª—å–∫–æ **–ø–æ—Å–ª–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ü–µ–Ω—ã**.

üí¨ –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø–∏—à–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–µ –∑–¥–æ—Ä–æ–≤–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–æ 24 —á–∞—Å–∞.

üéØ –¶–µ–ª—å ‚Äî –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ —Å–ø–æ–¥–≤–∏–≥–Ω—É—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, **–ø–æ—Å–ª–µ 2‚Äì3 —Ä–µ–ø–ª–∏–∫**, –º—è–≥–∫–æ, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ñ—Ä–∞–∑—ã, —Å–∏–Ω–æ–Ω–∏–º—ã, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ—Å—å.

üá∞üáø –í—Å–µ —Ü–µ–Ω—ã —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ —Ç–µ–Ω–≥–µ. –û–±—â–µ–Ω–∏–µ ‚Äî —Å –∂–∏—Ç–µ–ª—è–º–∏ –∏ –≥–æ—Å—Ç—è–º–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞.

üìç –ù–∏–∂–µ ‚Äî –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–∞–π—Å (–≤–∫–ª—é—á–∏—Ç–µ –µ–≥–æ –≤ –æ—Ç–≤–µ—Ç—ã, –µ—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É):

–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è –ø–ª–µ—á: 1 –∫–∞—Ç ‚Äî 220 000 —Ç–≥, 2 ‚Äî 275 000 —Ç–≥, 3 ‚Äî 320 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è –±–µ–¥–µ—Ä (–≤–Ω—É—Ç—Ä): 1 ‚Äî 200 000 —Ç–≥, 2 ‚Äî 250 000 —Ç–≥, 3 ‚Äî 300 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è –ø–æ—è—Å–Ω–∏—Ü—ã: 1 ‚Äî 220 000 —Ç–≥, 2 ‚Äî 275 000 —Ç–≥, 3 ‚Äî 420 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è —Å–ø–∏–Ω—ã: 1 ‚Äî 275 000 —Ç–≥, 2 ‚Äî 350 000 —Ç–≥, 3 ‚Äî 475 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è —è–≥–æ–¥–∏—Ü: 1 ‚Äî 275 000 —Ç–≥, 2 ‚Äî 350 000 —Ç–≥, 3 ‚Äî 500 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è –≥—Ä—É–¥–∏: 1 ‚Äî 220 000 —Ç–≥, 2 ‚Äî 300 000 —Ç–≥, 3 ‚Äî 400 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è –∂–∏–≤–æ—Ç–∞: 1 ‚Äî 400 000 —Ç–≥, 2 ‚Äî 500 000 —Ç–≥, 3 ‚Äî 650 000 —Ç–≥  
–õ–∏–ø–æ—Å–∞–∫—Ü–∏—è –±–æ–∫–æ–≤: 1 ‚Äî 220 000 —Ç–≥, 2 ‚Äî 300 000 —Ç–≥, 3 ‚Äî 350 000 —Ç–≥  
–ü–æ–¥–º—ã—à–µ—á–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: 1 ‚Äî 220 000 —Ç–≥, 2 ‚Äî 275 000 —Ç–≥, 3 ‚Äî 325 000 —Ç–≥  
1 –∑–æ–Ω–∞ (15√ó10 —Å–º): 250 000 —Ç–≥  

–ú–∞–º–º–æ–ø–ª–∞—Å—Ç–∏–∫–∞:  
‚Äî –ü–µ—Ä–µ–∞—Ä–µ–æ–ª—è—Ä–Ω–∞—è –º–∞—Å—Ç–æ–ø–µ–∫—Å–∏—è ‚Äî 500 000 —Ç–≥  
‚Äî –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –º–∞—Å—Ç–æ–ø–µ–∫—Å–∏—è ‚Äî 700 000 —Ç–≥  
‚Äî –†–µ–¥—É–∫—Ü–∏–æ–Ω–Ω–∞—è ‚Äî 800 000 —Ç–≥  
‚Äî –£–≤–µ–ª–∏—á–∏–≤–∞—é—â–∞—è (–±–µ–∑ –∏–º–ø–ª–∞–Ω—Ç–∞) ‚Äî 800 000 —Ç–≥  

–õ–∞–±–∏–æ–ø–ª–∞—Å—Ç–∏–∫–∞:  
‚Äî –õ–∏–ø–æ–ª–∏—Ñ–∏–ª–ª–∏–Ω–≥ –±–æ–ª—å—à–∏—Ö –ø–æ–ª–æ–≤—ã—Ö –≥—É–± ‚Äî 250 000 —Ç–≥  
‚Äî –õ–∏–ø–æ–ª–∏—Ñ–∏–ª–ª–∏–Ω–≥ –æ–¥–Ω–æ–π –≥—É–±—ã ‚Äî 150 000 —Ç–≥  

–ê–±–¥–æ–º–∏–Ω–æ–ø–ª–∞—Å—Ç–∏–∫–∞: 1 –∫–∞—Ç ‚Äî 850 000 —Ç–≥, 2 ‚Äî 1 000 000 —Ç–≥, 3 ‚Äî 1 200 000 —Ç–≥  
–ú–∏–Ω–∏–∞–±–¥–æ–º–∏–Ω–æ–ø–ª–∞—Å—Ç–∏–∫–∞ ‚Äî 700 000 —Ç–≥  

–ë–ª–µ—Ñ–∞—Ä–æ–ø–ª–∞—Å—Ç–∏–∫–∞:  
‚Äî –í–µ—Ä—Ö–Ω–∏–µ –≤–µ–∫–∏ ‚Äî 220 000 —Ç–≥  
‚Äî –ù–∏–∂–Ω–∏–µ –≤–µ–∫–∏ ‚Äî 250 000 —Ç–≥  
‚Äî –í–µ—Ä—Ö+–Ω–∏–∑ ‚Äî 450 000 —Ç–≥  
‚Äî –ù–∏–∂–Ω—è—è —Ç—Ä–∞–Ω—Å–∫–æ–Ω—ä—é–∫—Ç–∏–≤–∞–ª—å–Ω–∞—è ‚Äî 220 000 —Ç–≥  

–û—Ç–æ–ø–ª–∞—Å—Ç–∏–∫–∞ ‚Äî –æ—Ç 275 000 —Ç–≥  
–ß–µ–∫-–ª–∏—Ñ—Ç ‚Äî 600 000 —Ç–≥  

–ù–∞—Ä–∫–æ–∑ ‚Äî —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ—Å–ª–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
"""

def gpt_response(messages):
    return openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=messages
    ).choices[0].message.content

async def send_message(chat_id, text):
    async with httpx.AsyncClient() as client:
        await client.post(TELEGRAM_API_URL, json={
            "chat_id": chat_id,
            "text": text
        })

def timeout_trigger(chat_id):
    if chat_id not in user_offered:
        phrase = np.random.choice(timeout_phrases)
        user_offered.add(chat_id)
        asyncio.create_task(send_message(chat_id, phrase))

def user_wants_consultation(text: str) -> bool:
    text = text.lower()
    return any(phrase in text for phrase in ["–∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "—Ö–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", "–∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –ø—Ä–∏–µ–º", "–º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è"])

@app.post("/webhook/telegram")
async def telegram_webhook(request: Request):
    payload = await request.json()
    message = payload.get("message", {})
    chat_id = message.get("chat", {}).get("id")
    user_message = message.get("text")

    if not chat_id or not user_message:
        return {"ok": True}

        # ‚õ≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∂–µ–ª–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è
    if user_wants_consultation(user_message):
        user_offered.add(chat_id)
        await send_message(chat_id, "–ö–æ–Ω–µ—á–Ω–æ! –Ø –í–∞—Å –∑–∞–ø–∏—à—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π –¥–µ–Ω—å –∏ –≤—Ä–µ–º—è –í–∞–º —É–¥–æ–±–Ω–æ ‚Äî –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∑–∞–ª—Å—è —Å –í–∞–º–∏.")
        await send_message(chat_id, "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ–±—â–µ–Ω–∏–µ. –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.")
        return {"ok": True}

        
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    history = chat_histories.get(chat_id, [])
    history.append({"role": "user", "content": user_message})

    # –í–µ–∫—Ç–æ—Ä–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    user_embedding = np.array(embed(user_message)).astype("float32").reshape(1, -1)
    D, I = index.search(user_embedding, 1)

    if D[0][0] < 0.6:
        kb_match = knowledge_base[I[0][0]]
        history.insert(0, {"role": "user", "content": kb_match})

    else:
        fallback = np.random.choice(fallback_phrases)
        history.append({"role": "assistant", "content": fallback})

    history = [{"role": "system", "content": system_prompt}] + history[-10:]
    reply = gpt_response(history)
    await send_message(chat_id, reply)
    chat_histories[chat_id] = history[-10:]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–µ–ª–∞–Ω–∏—è –∑–∞–ø–∏—Å–∞—Ç—å—Å—è
    if user_wants_consultation(user_message):
        user_offered.add(chat_id)

    # –¢–∞–π–º–µ—Ä, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–ª–∏
    if chat_id not in user_offered:
        if chat_id in user_timers:
            user_timers[chat_id].cancel()
        user_timers[chat_id] = Timer(900, timeout_trigger, args=[chat_id])
        user_timers[chat_id].start()

    return {"ok": True}
