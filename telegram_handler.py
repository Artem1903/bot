import asyncio
import httpx
import logging
from httpx import Limits
from dialog_tree import dialog_tree
from state_manager import get_state, set_state, reset_state, touch_state
from send_to_admin import send_telegram_message

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π http-–∫–ª–∏–µ–Ω—Ç: keep-alive, –±–µ–∑ HTTP/2/–ø—Ä–æ–∫—Å–∏
_http = httpx.AsyncClient(
    timeout=8.0,
    limits=Limits(max_keepalive_connections=32, max_connections=64),
    trust_env=False
)

TOKEN = "7601158787:AAE52sbM7kd6DfBWpXPnr0_Q1w4y9am5h9o"
ADMIN = "842014271"
API_URL = f"https://api.telegram.org/bot{TOKEN}/sendMessage"

logging.basicConfig(level=logging.INFO)

STATE_IDLE = "idle"
STATE_OFFLINE = "awaiting_offline_data"
STATE_ONLINE = "awaiting_online_data"
STATE_PRICE = "price_categories"

AUTO_REPLY = (
    "ü§ñ –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —á–∞—Ç-–±–æ—Ç. –Ø –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ.\n"
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∞–π—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ü–∏—Ñ—Ä—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –º–µ–Ω—é.\n"
    "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É, –Ω–∞–∂–º–∏—Ç–µ 0."
)

async def handle_telegram_webhook(payload):
    try:
        message = payload.get("message", {})
        chat_id = message.get("chat", {}).get("id")
        text = message.get("text", "").strip() if "text" in message else None
        if not chat_id:
            return

        state = get_state(chat_id)
        if state is None:
            await send_message(chat_id, dialog_tree["start"]["message"])
            set_state(chat_id, STATE_IDLE)
            return

        touch_state(chat_id)

        if text:
            if text == "0":
                set_state(chat_id, STATE_IDLE)
                await send_message(chat_id, dialog_tree["start"]["message"])
                return

            if state == STATE_OFFLINE:
                if text.isdigit() and text == "9":
                    asyncio.create_task(send_telegram_message(ADMIN, f"‚ùå –û—Ç–º–µ–Ω–∞ –æ—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç {chat_id}"))
                    set_state(chat_id, STATE_IDLE)
                    await send_message(chat_id, "üö´ –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                    return
                asyncio.create_task(send_telegram_message(ADMIN, f"üìù –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å (–û–ß–ù–û):\n{text}"))
                await send_message(chat_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å –í–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º.\n‚òéÔ∏è +7 747 4603509")
                set_state(chat_id, STATE_IDLE)
                return

            if state == STATE_ONLINE:
                if text.isdigit() and text == "9":
                    asyncio.create_task(send_telegram_message(ADMIN, f"‚ùå –û—Ç–º–µ–Ω–∞ –æ–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å–∏ –æ—Ç {chat_id}"))
                    set_state(chat_id, STATE_IDLE)
                    await send_message(chat_id, "üö´ –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                    return
                asyncio.create_task(send_telegram_message(ADMIN, f"üìù –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å (–û–ù–õ–ê–ô–ù):\n{text}"))
                await send_message(chat_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å –í–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º.\n‚òéÔ∏è +7 747 4603509")
                set_state(chat_id, STATE_IDLE)
                return

            if text.isdigit():
                if state == STATE_PRICE and text in dialog_tree["price_categories"]["options"]:
                    next_key = dialog_tree["price_categories"]["options"][text]
                    response = dialog_tree[next_key]["message"]
                    await send_message(chat_id, response)
                    if text == "0":
                        set_state(chat_id, STATE_IDLE)
                    else:
                        set_state(chat_id, STATE_PRICE)
                    return

                if text in dialog_tree["start"]["options"]:
                    next_key = dialog_tree["start"]["options"][text]
                    response = dialog_tree[next_key]["message"]
                    await send_message(chat_id, response)
                    if text == "1":
                        set_state(chat_id, STATE_OFFLINE)
                    elif text == "2":
                        set_state(chat_id, STATE_ONLINE)
                    elif text == "3":
                        set_state(chat_id, STATE_PRICE)
                    else:
                        set_state(chat_id, STATE_IDLE)
                    return

            if state not in [STATE_OFFLINE, STATE_ONLINE]:
                await send_message(chat_id, AUTO_REPLY)
                return

        if state in [STATE_OFFLINE, STATE_ONLINE]:
            await send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–º (–∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –¥—Ä.).")
        else:
            await send_message(chat_id, AUTO_REPLY)

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ telegram_handler: {e}")

async def send_message(chat_id, text):
    await _http.post(API_URL, json={
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    })
